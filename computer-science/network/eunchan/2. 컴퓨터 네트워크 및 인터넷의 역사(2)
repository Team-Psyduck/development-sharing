컴퓨터 네트워크 및 인터넷의 역사(2)

1. Application Layer
(1) Client - Server Architecture
  - server
    - Always-On
    - Permanent IP Address (고정 IP)
    - Data centers for scaling
  - Client
    - may have dynamic IP Address
    - do not communicate directly with each other
(2) Process Communication
  - Client process : process that initiates communication
  - Server process : process that wait to be contacted
  - aside : application with P2P Architectures have client processes & server processes
(3) Socket
  - 프로세스간의 연결을 위해 필요한 것 ? IP Address + Port
  - web browser <-> www.google.co.kr (ip:port)
  - 포트 번호를 생략하면 자동으로 80
(4) What transport service dose an app need?
  - 하위계층이 상위계층에 기능을 제공
  - data integrity, timing, throughput, security..
  - Transport Layer에서 제공하는 기능은 Data Integrity
(5) Application, Transport Protocols
  - email (SMTP, TCP)
  - remote terminal access (Telnet, TCP)
  - Web (HTTP, TCP)
  - file transfer (FTP, TCP)
  - streaming multimedia (HTTP/RTP, TCP/UDP)
  - Internet telephony (SIR/RTP, TCP/UDP)

2. HTTP (Hyper Text Transper Protocol)
(1) HTTP?
  - Client/Server model
    - client : browser that requests, receives and display web objects
    - server : web server sends objects in response to reuqests
  - use TCP
  - stateless
(2) HTTP Connection
  - Non-persistent HTTP
    - request -> response -> close TCP connection
    - 한 페이지를 렌더링하기 위해 필요한 오브젝트를 매번 TCP 연결하는 과정이 필요
  - persistent HTTP
